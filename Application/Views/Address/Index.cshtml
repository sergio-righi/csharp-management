@model Application.Models.Address.AddressModel
@{
    ViewBag.Title = Title.Address;
}

<section id="section_header" class="section-header">

    <div class="title">@Title.Address</div>

    <div class="toolbar">

        @if (Model.Address.Id.IsPositive())
        {
            <a asp-controller="Address" asp-action="Index" asp-route-id="0" asp-route-personId="@Model.Address.PersonId" class="button button-add">

                @Button.New

            </a>
        }

    </div>

    <ol class="breadcrumb">

        <li><a asp-controller="Home" asp-action="Index">@Title.Home</a></li>

        @{
            await Html.RenderPartialAsync("~/Views/Person/_Breadcrumb.cshtml", new ViewDataDictionary(ViewData)
            {
                { "personId", Model.Address.PersonId },
                { "typeId", Model.Address.NotPersonTypeId }
            });
        }

        <li>@Title.Address</li>

    </ol>

</section>

<section id="section_content" class="section-content">

    <div class="row">

        <div class="col col-12">

            <div id="message">

                @await Html.PartialAsync("~/Views/Shared/Feedback/_Message.cshtml")

            </div>

        </div>

        <div class="col col-12">

            <div id="form">

                @{
                    await Html.RenderPartialAsync("~/Views/Address/_Form.cshtml", Model);
                }

            </div>

        </div>

        <div class="col col-12">

            <div id="result">

                @{
                    await Html.RenderPartialAsync("~/Views/Address/_Table.cshtml", Model.Addresses);
                }

            </div>

        </div>

    </div>

</section>

@section ScriptsFooter
{
    <environment include="Development">
        <script type="text/javascript" src="~/js/vanilla/page/address/index.js"></script>
    </environment>
    <environment exclude="Development">
        <script type="text/javascript" src="~/js/vanilla/page/address/index.min.js"></script>
    </environment>
}